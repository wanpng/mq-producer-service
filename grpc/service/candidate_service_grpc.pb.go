// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package service

import (
	context "context"
	domain "github.com/wanpng/mq-producer-service/grpc/domain"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// CandidateServiceClient is the client API for CandidateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CandidateServiceClient interface {
	SaveJobseekerProfile(ctx context.Context, in *domain.JobseekerProfile, opts ...grpc.CallOption) (*domain.Error, error)
	SaveJobseekerJobPreferences(ctx context.Context, in *domain.JobseekerJobPreferences, opts ...grpc.CallOption) (*domain.Error, error)
	SaveJobseekerSkills(ctx context.Context, in *domain.JobseekerSkill, opts ...grpc.CallOption) (*domain.Error, error)
	SaveJobseekerSummary(ctx context.Context, in *domain.JobseekerSummary, opts ...grpc.CallOption) (*domain.Error, error)
	SaveJobseekerEducation(ctx context.Context, in *domain.JobseekerEducation, opts ...grpc.CallOption) (*domain.Error, error)
	DeleteJobseekerEducation(ctx context.Context, in *domain.JobseekerEducation, opts ...grpc.CallOption) (*domain.Error, error)
	SaveJobseekerWorkExperience(ctx context.Context, in *domain.JobseekerWorkExperience, opts ...grpc.CallOption) (*domain.Error, error)
	DeleteJobseekerWorkExperience(ctx context.Context, in *domain.JobseekerWorkExperience, opts ...grpc.CallOption) (*domain.Error, error)
	SaveJobseekerTraining(ctx context.Context, in *domain.JobseekerTraining, opts ...grpc.CallOption) (*domain.Error, error)
	DeleteJobseekerTraining(ctx context.Context, in *domain.JobseekerTraining, opts ...grpc.CallOption) (*domain.Error, error)
}

type candidateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCandidateServiceClient(cc grpc.ClientConnInterface) CandidateServiceClient {
	return &candidateServiceClient{cc}
}

func (c *candidateServiceClient) SaveJobseekerProfile(ctx context.Context, in *domain.JobseekerProfile, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/saveJobseekerProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) SaveJobseekerJobPreferences(ctx context.Context, in *domain.JobseekerJobPreferences, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/saveJobseekerJobPreferences", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) SaveJobseekerSkills(ctx context.Context, in *domain.JobseekerSkill, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/saveJobseekerSkills", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) SaveJobseekerSummary(ctx context.Context, in *domain.JobseekerSummary, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/saveJobseekerSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) SaveJobseekerEducation(ctx context.Context, in *domain.JobseekerEducation, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/saveJobseekerEducation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) DeleteJobseekerEducation(ctx context.Context, in *domain.JobseekerEducation, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/deleteJobseekerEducation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) SaveJobseekerWorkExperience(ctx context.Context, in *domain.JobseekerWorkExperience, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/saveJobseekerWorkExperience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) DeleteJobseekerWorkExperience(ctx context.Context, in *domain.JobseekerWorkExperience, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/deleteJobseekerWorkExperience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) SaveJobseekerTraining(ctx context.Context, in *domain.JobseekerTraining, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/saveJobseekerTraining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *candidateServiceClient) DeleteJobseekerTraining(ctx context.Context, in *domain.JobseekerTraining, opts ...grpc.CallOption) (*domain.Error, error) {
	out := new(domain.Error)
	err := c.cc.Invoke(ctx, "/protos.service.CandidateService/deleteJobseekerTraining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CandidateServiceServer is the server API for CandidateService service.
// All implementations must embed UnimplementedCandidateServiceServer
// for forward compatibility
type CandidateServiceServer interface {
	SaveJobseekerProfile(context.Context, *domain.JobseekerProfile) (*domain.Error, error)
	SaveJobseekerJobPreferences(context.Context, *domain.JobseekerJobPreferences) (*domain.Error, error)
	SaveJobseekerSkills(context.Context, *domain.JobseekerSkill) (*domain.Error, error)
	SaveJobseekerSummary(context.Context, *domain.JobseekerSummary) (*domain.Error, error)
	SaveJobseekerEducation(context.Context, *domain.JobseekerEducation) (*domain.Error, error)
	DeleteJobseekerEducation(context.Context, *domain.JobseekerEducation) (*domain.Error, error)
	SaveJobseekerWorkExperience(context.Context, *domain.JobseekerWorkExperience) (*domain.Error, error)
	DeleteJobseekerWorkExperience(context.Context, *domain.JobseekerWorkExperience) (*domain.Error, error)
	SaveJobseekerTraining(context.Context, *domain.JobseekerTraining) (*domain.Error, error)
	DeleteJobseekerTraining(context.Context, *domain.JobseekerTraining) (*domain.Error, error)
	mustEmbedUnimplementedCandidateServiceServer()
}

// UnimplementedCandidateServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCandidateServiceServer struct {
}

func (UnimplementedCandidateServiceServer) SaveJobseekerProfile(context.Context, *domain.JobseekerProfile) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveJobseekerProfile not implemented")
}
func (UnimplementedCandidateServiceServer) SaveJobseekerJobPreferences(context.Context, *domain.JobseekerJobPreferences) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveJobseekerJobPreferences not implemented")
}
func (UnimplementedCandidateServiceServer) SaveJobseekerSkills(context.Context, *domain.JobseekerSkill) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveJobseekerSkills not implemented")
}
func (UnimplementedCandidateServiceServer) SaveJobseekerSummary(context.Context, *domain.JobseekerSummary) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveJobseekerSummary not implemented")
}
func (UnimplementedCandidateServiceServer) SaveJobseekerEducation(context.Context, *domain.JobseekerEducation) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveJobseekerEducation not implemented")
}
func (UnimplementedCandidateServiceServer) DeleteJobseekerEducation(context.Context, *domain.JobseekerEducation) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobseekerEducation not implemented")
}
func (UnimplementedCandidateServiceServer) SaveJobseekerWorkExperience(context.Context, *domain.JobseekerWorkExperience) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveJobseekerWorkExperience not implemented")
}
func (UnimplementedCandidateServiceServer) DeleteJobseekerWorkExperience(context.Context, *domain.JobseekerWorkExperience) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobseekerWorkExperience not implemented")
}
func (UnimplementedCandidateServiceServer) SaveJobseekerTraining(context.Context, *domain.JobseekerTraining) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveJobseekerTraining not implemented")
}
func (UnimplementedCandidateServiceServer) DeleteJobseekerTraining(context.Context, *domain.JobseekerTraining) (*domain.Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobseekerTraining not implemented")
}
func (UnimplementedCandidateServiceServer) mustEmbedUnimplementedCandidateServiceServer() {}

// UnsafeCandidateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CandidateServiceServer will
// result in compilation errors.
type UnsafeCandidateServiceServer interface {
	mustEmbedUnimplementedCandidateServiceServer()
}

func RegisterCandidateServiceServer(s grpc.ServiceRegistrar, srv CandidateServiceServer) {
	s.RegisterService(&_CandidateService_serviceDesc, srv)
}

func _CandidateService_SaveJobseekerProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).SaveJobseekerProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/saveJobseekerProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).SaveJobseekerProfile(ctx, req.(*domain.JobseekerProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_SaveJobseekerJobPreferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerJobPreferences)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).SaveJobseekerJobPreferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/saveJobseekerJobPreferences",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).SaveJobseekerJobPreferences(ctx, req.(*domain.JobseekerJobPreferences))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_SaveJobseekerSkills_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).SaveJobseekerSkills(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/saveJobseekerSkills",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).SaveJobseekerSkills(ctx, req.(*domain.JobseekerSkill))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_SaveJobseekerSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerSummary)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).SaveJobseekerSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/saveJobseekerSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).SaveJobseekerSummary(ctx, req.(*domain.JobseekerSummary))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_SaveJobseekerEducation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerEducation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).SaveJobseekerEducation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/saveJobseekerEducation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).SaveJobseekerEducation(ctx, req.(*domain.JobseekerEducation))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_DeleteJobseekerEducation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerEducation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).DeleteJobseekerEducation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/deleteJobseekerEducation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).DeleteJobseekerEducation(ctx, req.(*domain.JobseekerEducation))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_SaveJobseekerWorkExperience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerWorkExperience)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).SaveJobseekerWorkExperience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/saveJobseekerWorkExperience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).SaveJobseekerWorkExperience(ctx, req.(*domain.JobseekerWorkExperience))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_DeleteJobseekerWorkExperience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerWorkExperience)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).DeleteJobseekerWorkExperience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/deleteJobseekerWorkExperience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).DeleteJobseekerWorkExperience(ctx, req.(*domain.JobseekerWorkExperience))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_SaveJobseekerTraining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerTraining)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).SaveJobseekerTraining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/saveJobseekerTraining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).SaveJobseekerTraining(ctx, req.(*domain.JobseekerTraining))
	}
	return interceptor(ctx, in, info, handler)
}

func _CandidateService_DeleteJobseekerTraining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerTraining)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).DeleteJobseekerTraining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.CandidateService/deleteJobseekerTraining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).DeleteJobseekerTraining(ctx, req.(*domain.JobseekerTraining))
	}
	return interceptor(ctx, in, info, handler)
}

var _CandidateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.service.CandidateService",
	HandlerType: (*CandidateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "saveJobseekerProfile",
			Handler:    _CandidateService_SaveJobseekerProfile_Handler,
		},
		{
			MethodName: "saveJobseekerJobPreferences",
			Handler:    _CandidateService_SaveJobseekerJobPreferences_Handler,
		},
		{
			MethodName: "saveJobseekerSkills",
			Handler:    _CandidateService_SaveJobseekerSkills_Handler,
		},
		{
			MethodName: "saveJobseekerSummary",
			Handler:    _CandidateService_SaveJobseekerSummary_Handler,
		},
		{
			MethodName: "saveJobseekerEducation",
			Handler:    _CandidateService_SaveJobseekerEducation_Handler,
		},
		{
			MethodName: "deleteJobseekerEducation",
			Handler:    _CandidateService_DeleteJobseekerEducation_Handler,
		},
		{
			MethodName: "saveJobseekerWorkExperience",
			Handler:    _CandidateService_SaveJobseekerWorkExperience_Handler,
		},
		{
			MethodName: "deleteJobseekerWorkExperience",
			Handler:    _CandidateService_DeleteJobseekerWorkExperience_Handler,
		},
		{
			MethodName: "saveJobseekerTraining",
			Handler:    _CandidateService_SaveJobseekerTraining_Handler,
		},
		{
			MethodName: "deleteJobseekerTraining",
			Handler:    _CandidateService_DeleteJobseekerTraining_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/service/candidate_service.proto",
}
